apiVersion: apps/v1
kind: Deployment
metadata:
  name: gaudi3-scale-api
  namespace: gaudi3-scale
  labels:
    app.kubernetes.io/name: gaudi3-scale
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "0.4.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: gaudi3-scale
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gaudi3-scale
        app.kubernetes.io/component: api
        app.kubernetes.io/version: "0.4.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: gaudi3-scale
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: api
        image: ghcr.io/yourusername/gaudi3-scale-starter:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PORT
          value: "8000"
        - name: METRICS_PORT
          value: "8080"
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        envFrom:
        - secretRef:
            name: gaudi3-scale-secrets
        - configMapRef:
            name: gaudi3-scale-config
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/cache
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
            ephemeral-storage: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
            ephemeral-storage: 5Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config-volume
        configMap:
          name: gaudi3-scale-config
      - name: tmp-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: logs-volume
        emptyDir:
          sizeLimit: 2Gi
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - gaudi3-scale
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "gaudi.habana.ai/gaudi"
        operator: "Exists"
        effect: "NoSchedule"
      terminationGracePeriodSeconds: 60
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gaudi3-scale-trainer
  namespace: gaudi3-scale
  labels:
    app.kubernetes.io/name: gaudi3-scale
    app.kubernetes.io/component: trainer
    app.kubernetes.io/version: "0.4.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gaudi3-scale
      app.kubernetes.io/component: trainer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gaudi3-scale
        app.kubernetes.io/component: trainer
        app.kubernetes.io/version: "0.4.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: gaudi3-scale
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: trainer
        image: ghcr.io/yourusername/gaudi3-scale-starter:latest
        imagePullPolicy: IfNotPresent
        command: ["gaudi3-train"]
        args: ["--config", "/app/config/training_config.yaml"]
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: HPU_VISIBLE_DEVICES
          value: "0"
        - name: HABANA_LOGS
          value: "/app/logs"
        - name: PT_HPU_LAZY_MODE
          value: "1"
        - name: PT_HPU_ENABLE_LAZY_COMPILATION
          value: "1"
        envFrom:
        - secretRef:
            name: gaudi3-scale-secrets
        - configMapRef:
            name: gaudi3-scale-config
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: data-volume
          mountPath: /app/data
        - name: models-volume
          mountPath: /app/models
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/cache
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            cpu: 4000m
            memory: 16Gi
            ephemeral-storage: 10Gi
            gaudi.habana.ai/gaudi: 1
          limits:
            cpu: 8000m
            memory: 32Gi
            ephemeral-storage: 50Gi
            gaudi.habana.ai/gaudi: 1
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "ps aux | grep gaudi3-train | grep -v grep"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "test -f /app/logs/ready"
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config-volume
        configMap:
          name: gaudi3-scale-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: gaudi3-scale-data-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: gaudi3-scale-models-pvc
      - name: tmp-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir:
          sizeLimit: 5Gi
      - name: logs-volume
        emptyDir:
          sizeLimit: 10Gi
      nodeSelector:
        kubernetes.io/os: linux
        gaudi.habana.ai/gaudi: "true"
      tolerations:
      - key: "gaudi.habana.ai/gaudi"
        operator: "Exists"
        effect: "NoSchedule"
      terminationGracePeriodSeconds: 300
      restartPolicy: Always